{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Content.svelte",
    "../../MatrixDisplay.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import MatrixDisplay from './MatrixDisplay.svelte';\n    import Fraction from '../model/fraction';\n    import Matrix from '../model/matrix';\n    \n    let queries = '';\n    let numberOfRow = '4';\n    let numberOfColumn = '4';\n    let matrix = new Matrix(Number(numberOfRow), Number(numberOfColumn));\n    let memory = {\n        queries,\n        numberOfRow,\n        numberOfColumn,\n        matrix: matrix.clone()\n    };\n\n    function onInitializeMatrix(event) {\n        matrix = new Matrix(Number(numberOfRow), Number(numberOfColumn));\n    }\n\n    function onUpdateMatrixEntry(event) {\n        const { row, col, fractionString } = event.detail;\n        const fraction = Fraction.fromString(fractionString);\n        matrix = matrix.setEntry(row, col, fraction);\n    }\n\n    function onExecuteQuery(event) {\n        matrix = matrix.execute(queries.split('\\n'));\n    }\n\n    function onSave() {\n        memory = {\n            queries,\n            numberOfRow,\n            numberOfColumn,\n            matrix: matrix.clone()\n        };\n    }\n\n    function onLoadSave() {\n        ({ queries, numberOfRow, numberOfColumn } = memory);\n        matrix = memory.matrix.clone();\n    }\n</script>\n\n<style>\n    .container-fluid {\n        padding: 12px;\n    }\n\n    .mono-font {\n        font-family: monospace;\n        font-size: 16px;\n    }\n\n    textarea {\n        width: 100%;\n    }\n\n    button {\n        margin-bottom: 12px;\n    }\n</style>\n\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12 col-md-8\">\n            <MatrixDisplay matrix={matrix} on:update={onUpdateMatrixEntry} />\n        </div>\n        <div class=\"col-12 col-md-4\">\n            <div class=\"row\">\n                <div class=\"input-group mb-3 col-6\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon1\">#Row</span>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" bind:value={numberOfRow}>\n                </div>\n                <div class=\"input-group mb-3 col-6\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon1\">#Column</span>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" bind:value={numberOfColumn}>\n                </div>\n                <div class=\"col-12\">\n                    <button class=\"col-12 btn btn-success\" on:click={onInitializeMatrix}>\n                        Initialize Matrix\n                    </button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <button class=\"col-12 btn btn-sm btn-dark\" on:click={onSave}>\n                        Save\n                    </button>\n                </div>\n                <div class=\"col-6\">\n                    <button class=\"col-12 btn btn-sm btn-dark\" on:click={onLoadSave}>\n                        Load Saved\n                    </button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h5>Query</h5>\n                    <textarea name=\"query\" id=\"query\" rows=\"5\" bind:value={queries}></textarea>\n                </div>\n                <div class=\"col-12\">\n                    <button class=\"col-12 btn btn-primary\" on:click={onExecuteQuery}>\n                        Execute\n                    </button>\n                </div>\n                <div class=\"col-12\">\n                    <h5>Query instruction set</h5>\n                    <ul class=\"mono-font\">\n                        <li>\"MUL k,r\": k*Rr -&gt; Rr</li>\n                        <li>\"SWP r,s\": Rr &lt;-&gt; Rs</li>\n                        <li>\"AMR k,r,s\": k*Rr + Rs -&gt; Rs</li>\n                    </ul>\n                    * Each query is separated by newlines.\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    export let matrix;\n\n    const dispatch = createEventDispatcher();\n\n    function updateEntry(row, col, fractionString) {\n        dispatch('update', { row, col, fractionString });\n    }\n</script>\n\n<style>\n    input {\n        /* max-width: 120px; */\n        width: 100%;\n        margin: 0;\n        padding: 4px;\n        box-sizing: border-box;\n    }\n</style>\n\n<table class=\"table table-bordered\">\n    <tbody>\n        {#each matrix.data as row, i}\n            <tr>\n                {#each row as entry, j}\n                    <td>\n                        <input value={entry.toString()} on:change={event => updateEntry(i + 1, j + 1, event.target.value)} />\n                    </td>\n                {/each}\n            </tr>\n        {/each}\n    </tbody>\n</table>"
  ],
  "names": [],
  "mappings": "AA8CI,gBAAgB,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,WAAW,CAAE,SAAS,CACtB,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACf,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,aAAa,CAAE,IAAI,AACvB,CAAC;AChDD,KAAK,eAAC,CAAC,AAEH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,UAAU,AAC1B,CAAC"
}